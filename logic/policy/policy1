#definition
define sort int class=edu.thu.ss.logic.example.IntSort
define sort column class=edu.thu.ss.logic.example.ColumnSort

define function int add(int x, int y) class=edu.thu.ss.logic.example.Add

define predicate isZero(int x) class=edu.thu.ss.logic.example.IsZero
define predicate equals(int x, int y) class=edu.thu.ss.logic.example.Equals
define predicate output(column c) class=edu.thu.ss.logic.example.Output
define predicate isTrue(bool b) class=edu.thu.ss.logic.example.IsTrue

define formula f1 = isZero(x)

#policy


r1: exists int x. equals(x, 0)

r2: forall int x. equals(x, 0)

/*r0: (forall int x. isZero(x) imply equals(x, 0)) and (exists int x. equals(x, 0) and isZero(0))

r1: forall int x. equals(x, 1) imply (forall int y. equals(x, y) imply (isZero(x) || isZero(y)))

r2: AG (!output("c1"))

r3: forall column c. output(c)

r4: isZero(1) or isZero(0) or isZero(1) 

r5: isZero(add(-1, 1))*/