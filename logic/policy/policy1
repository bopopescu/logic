#definition
define sort int class=edu.thu.ss.logic.example.IntSort
define sort column class=edu.thu.ss.logic.example.ColumnSort

define function int add(int x, int y) class=edu.thu.ss.logic.example.Add

define predicate isZero(int x) class=edu.thu.ss.logic.example.IsZero
define predicate equals(int x, int y) class=edu.thu.ss.logic.example.Equals
define predicate output(column c) class=edu.thu.ss.logic.example.Output
define predicate isTrue(bool b) class=edu.thu.ss.logic.example.IsTrue

define formula f1 = isZero(x)

#policy
r1: forall int x. equals(x, 1) imply (forall int y. equals(x, y) imply (isZero(x) || isZero(y)))

r2: exists int x. equals(1, 1) and equals(x, 1) and isZero(x)

r3: forall column c. output(c)

r4: isZero(1) or isZero(0)

r5: isZero(add(-1, 1))

//r2: AG (!output("id"))

//r3: not AG (isZero(1))


